/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

import model.ModTarefas;
import dao.DAOTarefa;
import java.awt.Component;
import java.time.LocalDate;
import java.time.LocalTime;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import util.ConversorData;

/**
 *
 * @author Senac
 */
public class TelaTarefas extends javax.swing.JFrame {

    ModTarefas mtf = new ModTarefas();
    DAOTarefa daoTF = new DAOTarefa();
    ArrayList<ModTarefas> lista = daoTF.listarDAOTarefa();
    String cadAlt = "Cad";
    //TelaPesquisar telaPesquisar = new TelaPesquisar();
    //private Date dataSelecionada;

    /**
     * Creates new form TelaTarefas
     */
    public TelaTarefas() {
        initComponents();
        setLocationRelativeTo(this);
        atualizarTabela();
        //setExtendedState(MAXIMIZED_BOTH);
        setIconImage(new ImageIcon(getClass().getResource("/imagem/logo.png")).getImage());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        tfTarefas = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        tfDescricao = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblTf = new javax.swing.JTable();
        btnAdd = new javax.swing.JButton();
        btnSair = new javax.swing.JButton();
        btnLimpar = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jBtEditar = new javax.swing.JButton();
        jBtexcluir = new javax.swing.JButton();
        tfID1 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jDCData = new com.toedter.calendar.JDateChooser();
        jTFHoraInicio = new javax.swing.JFormattedTextField();
        jTFHoraFim = new javax.swing.JFormattedTextField();
        jBtPesquisa = new javax.swing.JButton();
        jCBStatus = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Cadastro de Tarefas");

        jPanel1.setBackground(new java.awt.Color(0, 153, 102));

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("CADASTRO DE TAREFAS");

        jLabel2.setText("Tarefas");

        tfTarefas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfTarefasActionPerformed(evt);
            }
        });

        jLabel3.setText("Descrição");

        tblTf.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Tarefas", "Descrição", "Data", "H.Inicio", "H.Fim", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblTf);
        if (tblTf.getColumnModel().getColumnCount() > 0) {
            tblTf.getColumnModel().getColumn(0).setMinWidth(50);
            tblTf.getColumnModel().getColumn(0).setPreferredWidth(50);
            tblTf.getColumnModel().getColumn(0).setMaxWidth(50);
            tblTf.getColumnModel().getColumn(1).setPreferredWidth(300);
            tblTf.getColumnModel().getColumn(2).setPreferredWidth(300);
        }

        btnAdd.setText("Adicionar");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnSair.setText("Sair");
        btnSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSairActionPerformed(evt);
            }
        });

        btnLimpar.setText("Limpar");
        btnLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimparActionPerformed(evt);
            }
        });

        jLabel4.setText("ID");

        jBtEditar.setText("Editar");
        jBtEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actionEditar(evt);
            }
        });

        jBtexcluir.setText("Excluir");
        jBtexcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actionExcluirTarefa(evt);
            }
        });

        tfID1.setEditable(false);
        tfID1.setEnabled(false);
        tfID1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfID1ActionPerformed(evt);
            }
        });

        jLabel5.setText("Data:");

        jLabel6.setText("Hora Fim:");

        jLabel7.setText("Hora Inicio:");

        jDCData.setDateFormatString("dd '/' MM '/' y");

        try {
            jTFHoraInicio.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##:##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jTFHoraInicio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTFHoraInicioActionPerformed(evt);
            }
        });

        try {
            jTFHoraFim.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##:##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        jBtPesquisa.setText("Pesquisar");
        jBtPesquisa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actionPesquisarView(evt);
            }
        });

        jCBStatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "", "PENDENTE", "EM ANDAMENTO", "CONCLUIDO" }));
        jCBStatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCBStatusActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(tfID1, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jDCData, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel7)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(btnSair))
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGap(41, 41, 41)
                                                .addComponent(jLabel6)
                                                .addGap(0, 0, Short.MAX_VALUE))))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jTFHoraInicio, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jTFHoraFim, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(29, 29, 29)
                                        .addComponent(jCBStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(56, 56, 56))))
                            .addComponent(tfTarefas)
                            .addComponent(tfDescricao)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(14, 14, 14)
                                        .addComponent(btnAdd)
                                        .addGap(18, 18, 18)
                                        .addComponent(jBtEditar)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(btnLimpar)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jBtexcluir)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jBtPesquisa))
                                    .addComponent(jLabel3))
                                .addGap(0, 203, Short.MAX_VALUE)))
                        .addContainerGap())))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnSair)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 59, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel4)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(5, 5, 5)
                                .addComponent(tfID1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jDCData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jTFHoraInicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jTFHoraFim, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jCBStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel2)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tfTarefas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tfDescricao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnLimpar)
                    .addComponent(jBtEditar)
                    .addComponent(jBtexcluir)
                    .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtPesquisa))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        adicionaTarefa();
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSairActionPerformed
        
        if (JOptionPane.showConfirmDialog(null, "Você quer sair?", "Sair", JOptionPane.YES_NO_OPTION) == 0) {
            this.dispose();
        }
        
    }//GEN-LAST:event_btnSairActionPerformed

    private void btnLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimparActionPerformed
        limparCampos();
    }//GEN-LAST:event_btnLimparActionPerformed

    private void actionEditar(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_actionEditar
        editarTarefas();
    }//GEN-LAST:event_actionEditar

    private void actionExcluirTarefa(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_actionExcluirTarefa
        excluirTarefa();
    }//GEN-LAST:event_actionExcluirTarefa

    private void tfID1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfID1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfID1ActionPerformed

    private void jTFHoraInicioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTFHoraInicioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTFHoraInicioActionPerformed

    private void actionPesquisarView(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_actionPesquisarView
        TelaPrincipal.chamarPesquisas();
    }//GEN-LAST:event_actionPesquisarView

    private void jCBStatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCBStatusActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCBStatusActionPerformed

    private void tfTarefasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfTarefasActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfTarefasActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaTarefas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaTarefas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaTarefas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaTarefas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaTarefas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnLimpar;
    private javax.swing.JButton btnSair;
    private javax.swing.JButton jBtEditar;
    private javax.swing.JButton jBtPesquisa;
    private javax.swing.JButton jBtexcluir;
    private javax.swing.JComboBox<String> jCBStatus;
    private com.toedter.calendar.JDateChooser jDCData;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JFormattedTextField jTFHoraFim;
    private javax.swing.JFormattedTextField jTFHoraInicio;
    private javax.swing.JTable tblTf;
    private javax.swing.JTextField tfDescricao;
    private javax.swing.JTextField tfID1;
    private javax.swing.JTextField tfTarefas;
    // End of variables declaration//GEN-END:variables

    private void limparCampos() {
        tfID1.setText("");
        tfTarefas.setText("");
        tfDescricao.setText("");
        jDCData.setDate(null);
        jTFHoraInicio.setText("");
        jTFHoraFim.setText("");
        jCBStatus.setSelectedIndex(0);
    }

    private void atualizarTabela() {
        DAOTarefa dao = new DAOTarefa();
        lista = dao.listarDAOTarefa();
        DefaultTableModel model = (DefaultTableModel) tblTf.getModel();
        model.setRowCount(0);

        for (ModTarefas modTarefas : lista) {
            model.addRow(new Object[]{
                modTarefas.getId(),
                modTarefas.getTarefas(),
                modTarefas.getDescricao(),
                modTarefas.getDataTarefa(),
                modTarefas.getHoraInicio(),
                modTarefas.getHoraFim(),
                modTarefas.getStatus()
            });
            aplicarFormatoDataBr(tblTf, 3);
        }
    }

    private void adicionaTarefa() {
        DateTimeFormatter formataHora = DateTimeFormatter.ofPattern("HH:mm");
        
        Date dataSelecionada = jDCData.getDate();
        String horaInicioTexto = jTFHoraInicio.getText();
        String horaFimTexto = jTFHoraFim.getText();
         
        LocalTime horaInicio;
        LocalTime horaFim;
        
        if (tfDescricao.getText().trim().equals("") || tfTarefas.getText().trim().equals("") || jCBStatus.getSelectedItem() == null ||
                jDCData.getDate() == null) {
            JOptionPane.showMessageDialog(null, "Campos não preenchidos", "Atenção", JOptionPane.ERROR_MESSAGE);
            return;
        }
      
        try {
            horaInicio = LocalTime.parse(horaInicioTexto, formataHora);
            horaFim = LocalTime.parse(horaFimTexto, formataHora);
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Hora invalida! Use o formato HH:mm.", "Erro", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        mtf.setTarefas(tfTarefas.getText());
        mtf.setDescricao(tfDescricao.getText());
        mtf.setDataTarefa(ConversorData.converterDateParaLocalDate(dataSelecionada));
        mtf.setHoraInicio(LocalTime.parse(jTFHoraInicio.getText()));
        mtf.setHoraFim(LocalTime.parse(jTFHoraFim.getText()));
        mtf.setStatus(String.valueOf(jCBStatus.getSelectedItem()));

        if (cadAlt.equals("Cad")) {
            if (daoTF.salvarDAOTarefa(mtf) > 0){
            JOptionPane.showMessageDialog(null, "Cadastro OK", "Cadastro", JOptionPane.INFORMATION_MESSAGE);
            atualizarTabela();
            limparCampos();
        } else {
            JOptionPane.showMessageDialog(null, "Erro ao cadastrar", "Cadastro", JOptionPane.ERROR_MESSAGE);
        }
        }else{
            mtf.setId(Integer.parseInt(tfID1.getText()));
            if (daoTF.editarTarefaDAO(mtf)) {
                JOptionPane.showMessageDialog(null, "Tarefa atualizada", "Cadastro", JOptionPane.INFORMATION_MESSAGE);
                limparCampos();
                atualizarTabela();
                cadAlt = "Cad";
            } else {
                JOptionPane.showMessageDialog(null, "Erro ao atualizar", "Cadastro", JOptionPane.ERROR_MESSAGE);
            }
        }
        System.out.println(mtf.getDataTarefa());
    }
        

    private void editarTarefas() {
        
        cadAlt = "alt";
        int linha = tblTf.getSelectedRow();
        if (linha < 0) {
            JOptionPane.showMessageDialog(null, "Você deve selecionar um registro.", "Erro.", JOptionPane.ERROR_MESSAGE);
        } else {
            int id = (int) tblTf.getValueAt(linha, 0);
            String tarefa = (String) tblTf.getValueAt(linha, 1);
            String descricao = (String) tblTf.getValueAt(linha, 2);
            LocalDate data = (LocalDate) tblTf.getValueAt(linha, 3);
            LocalTime horainicio = (LocalTime) tblTf.getValueAt(linha, 4);
            LocalTime horafim = (LocalTime) tblTf.getValueAt(linha, 5);
            String status = (String) tblTf.getValueAt(linha, 6);
            
            mtf = new ModTarefas();
            mtf.setId(id);
            mtf.setTarefas(tarefa);
            mtf.setDescricao(descricao);
            mtf.setDataTarefa(data);
            mtf.setHoraInicio(horainicio);
            mtf.setHoraFim(horafim);
            mtf.setStatus(status);
            
            
            tfID1.setText(String.valueOf(id));
            tfTarefas.setText(tarefa);
            tfDescricao.setText(descricao);
            jDCData.setDate(ConversorData.converterLocalDateParaDate(data));
            jTFHoraInicio.setText(String.valueOf(horainicio));
            jTFHoraFim.setText(String.valueOf(horafim));
            jCBStatus.setSelectedItem(status);
        }
    }

    private void excluirTarefa() {
        DAOTarefa dao = new DAOTarefa();
        int linha = tblTf.getSelectedRow();
        if(linha < 0) {
            JOptionPane.showConfirmDialog(null, "Um registro deve ser selecionado", "Erro", JOptionPane.ERROR_MESSAGE);
        } else {
            int id= (int) tblTf.getValueAt(linha, 0);
            if(id != 0){
                mtf.setId(id);
            dao.excluirTarefaDAO(mtf.getId());
            JOptionPane.showMessageDialog(null, "Tarefa excluida", "Sucesso", JOptionPane.INFORMATION_MESSAGE);
            atualizarTabela();
            }else{
                JOptionPane.showMessageDialog(null,"Erro ao excluir tarefa" ,"Erro" , JOptionPane.ERROR_MESSAGE);
            }
            
            
        }
    }

    private void aplicarFormatoDataBr(JTable tabela, int indiceColunaData) {
        tabela.getColumnModel().getColumn(indiceColunaData).setCellRenderer(new DefaultTableCellRenderer(){
            private final DateTimeFormatter formatoBr = DateTimeFormatter.ofPattern("dd/MM/yyyy");
            
            //@Override
            @Override
            public Component getTableCellRendererComponent (JTable table, Object value,
                    boolean isSelected, boolean hasFocus,
                    int row, int column){
                if(value instanceof LocalDate){
                    value = ((LocalDate)value).format(formatoBr) ;
                }
                return super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
            }
        });
    }

    

    private void telaInicial() {
        TelaPrincipal telaPrincipal = new TelaPrincipal();
        this.dispose();
          
          int op = 0;
          if(op == 0){
              telaPrincipal.setVisible(true);
              telaPrincipal.setLocationRelativeTo(this);
          }
    }

    
 }
